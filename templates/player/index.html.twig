{% extends 'base.html.twig' %}

{% block title %}Player index{% endblock %}

{% block body %}
    <div class="container" x-data="playerPage()">
        <div class="row">
            <div class="col-sm-9">
                <h5 x-text="headerTitle"></h5>
            </div>
            <dv class="col-sm-3">
                <button class="btn btn-outline-dark" x-show="showList" @click="openForm()">
                    <i class="fa fa-plus"></i>
                    &nbsp;Add new player
                </button>
            </dv>
        </div>
        <div class="row" x-show="showList">
            <ul class="nav nav-tabs">
                <li class="nav-item">
                    <a class="nav-link" x-ref="active" :class="{ 'active': showActive }" @click.prevent="showActive = true; showInactive = false">
                        Active
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" x-ref="inactive" :class="{ 'active': showInactive }" @click.prevent="showActive = false; showInactive = true">
                        Inactive
                    </a>
                </li>
            </ul>
            <div class="col-sm-12" x-show="showActive">
                Active
            </div>
            <div class="col-sm-12" x-show="showInactive">
                Inactive
            </div>
        </div>
        <div class="row" x-show="showForm">
            <div class="col-sm-12">
                <form @submit.prevent="submitForm()">
                    <div class="mb-3">
                        <label for="nameInput" class="form-label">Name</label>
                        <input type="text" class="form-control" :class="formError.name !== '' ? 'is-invalid' : ''"
                               id="nameInput" x-model="formData.name">
                        <div class="invalid-feedback" x-text="formError.name"></div>
                    </div>
                    <div class="mb-3">
                        <label for="countryInput" class="form-label">Country</label>
                        <input type="text" class="form-control" id="countryInput"
                               :class="formError.surname !== '' ? 'is-invalid' : ''" x-model="formData.surname">
                        <div class="invalid-feedback" x-text="formError.surname"></div>
                    </div>
                    <div class="mb-3">
                        <label for="balanceInput" class="form-label">Team</label>
                        <select class="form-control" name="team" id="team" x-model="formData.teamId">
                            <option > Select a team</option>
                            <template x-for="team in teams">
                                <option :value="team.id" x-text="team.name"></option>
                            </template>
                        </select>
                        <p>Selected option: <span x-text="formData.teamId"></span></p>
                    </div>
                    <div class="mb-3">
                        <div class="btn-group float-end" role="group">
                            <button class="btn btn-xs btn-outline-danger" @click.prevent="closeForm()">
                                <i class="fa fa-close"></i>
                                &nbsp;Cancel
                            </button>
                            <button type="submit" class="btn btn-outline-success">
                                <i class="fa fa-check"></i>
                                &nbsp;Submit
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <script type="application/ecmascript">
        function playerPage() {
            return {
                showList: true,
                showForm: false,
                showActive: true,
                showInactive: false,
                headerTitle: 'All players',
                teams: [],
                teamsUri: '{{ path('api_team_light_list') }}',
                formData: {
                    name: '',
                    surname: '',
                    teamId: null,
                },
                formError: {
                    name: '',
                    surname: '',
                },

                openForm(header = 'New player') {
                    this.showList = false;
                    this.showForm = true;
                    this.headerTitle = header;
                },

                closeForm(header = 'All players'){
                    this.showList = true;
                    this.showForm = false;
                    this.headerTitle = header;
                },

                async retrieveTeam() {
                    this.teams = await (await fetch(this.teamsUri)).json();
                },

                init(){
                    this.retrieveTeam();
                },

                submitForm() {
                    console.log(this.formData);
                    this.closeForm();
                    if (this.formData.teamId) {
                        const buttonElement = document.querySelector('[x-ref="active"]');
                        buttonElement.click();
                    } else {
                        const buttonElement = document.querySelector('[x-ref="inactive"]');
                        buttonElement.click();
                    }
                }
            }
        }
    </script>
{% endblock %}
