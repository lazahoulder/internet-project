{% set active = 'player' %}

{% extends 'base.html.twig' %}

{% block title %}Player{% endblock %}

{% block body %}
    <div class="container" x-data="playerShow()">
        <div class="row">
            <div class="col-sm-6">
                <h3>Player</h3>
            </div>
            <div class="col-sm-6">
                <a href="{{ path('app_player_index') }}" class="btn btn-sm btn-outline-dark float-end">
                    <i class="fa-solid fa-list"></i>
                    &nbsp;Back to list
                </a>
                {% if player.isActive %}
                    <a href="{{ path('app_team_show', {'id': player.actualTeam.id}) }}"
                       class="btn btn-sm btn-outline-dark float-end">
                        <i class="fa-solid fa-users"></i>
                        &nbsp;Go to Team
                    </a>
                {% endif %}
            </div>
        </div>
        <hr>
        <div class="row">
            <div class="col-sm-3">
                <h5 class="text-decoration-underline">Base information</h5>
                <h6><strong>Name:</strong> {{ player.name }}</h6>
                <h6><strong>Country:</strong> {{ player.surname }}</h6>
            </div>
            <div class="col-sm-3">
                <h5 class="text-decoration-underline">Actual team</h5>
                {% if player.isActive %}
                    <h6><strong>Name:</strong> {{ player.actualTeam.name }}</h6>
                    <h6><strong>Country:</strong> {{ player.actualTeam.country }}</h6>
                {% else %}
                    <h6><strong>Player is free now</strong></h6>
                {% endif %}
            </div>
            <div class="col-sm-3">
                <h5 class="text-decoration-underline">Market data</h5>
                {% if player.isActive %}
                    <h6><strong>Bids Total:</strong>&nbsp;<span x-text="{{ player.countActiveBids }}"></span></h6>
                    <h6><strong>Player
                            value:</strong>&nbsp;{{ player.actualActiveStatus.sellingValue ?? player.actualActiveStatus.amountValue }}
                    </h6>
                {% else %}
                    <h6><strong>Player need to be hired</strong></h6>
                {% endif %}
            </div>
            <div class="col-sm-3">
                {% if player.isActive %}
                    <button class="btn btn-sm btn-outline-success float-end" @click="bidPlayer()">
                        <i class="fa fa-gavel"></i>
                        &nbsp;Bid on player
                    </button>
                {% else %}
                    <button class="btn btn-sm btn-outline-success float-end" @click="hirePlayer()">
                        <i class="fa fa-user-plus"></i>
                        &nbsp;Hire player
                    </button>
                {% endif %}
            </div>
        </div>
        <hr>
        <div class="row">
            <ul class="nav nav-tabs">
                {% if player.isActive %}
                    <li class="nav-item">
                        <a class="nav-link" x-ref="active" :class="{ 'active': showBids }"
                           @click.prevent="showBids = true; showHistory = false">
                            All bids
                        </a>
                    </li>
                {% endif %}
                <li class="nav-item">
                    <a class="nav-link" x-ref="inactive" :class="{ 'active': showHistory }"
                       @click.prevent="showBids = false; showHistory = true">
                        History
                    </a>
                </li>
            </ul>
            {% if player.isActive %}
                <div class="col-sm-12" x-show="showBids">
                    {% set vars = {
                        playerId: player.id,
                        maxValue: 5,
                        action: true,
                    } %}
                    {% include 'bids/list.html.twig' with vars %}
                </div>
            {% endif %}
            <div class="col-sm-12" x-show="showHistory">
                {% include 'player/history.html.twig' %}
            </div>
        </div>
        <button type="button" x-show="false" x-ref="showModal" class="btn btn-primary" data-bs-toggle="modal"
                data-bs-target="#myModal">
            Launch demo modal
        </button>
        <div class="modal fade" id="myModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="exampleModalLabel">
                            {{ player.active ? 'Bid on ' : 'Hire ' }} player:
                            <span x-text="bidFormData.name"></span></h1>
                        <button type="button" x-ref="close-modal" class="btn-close" data-bs-dismiss="modal"
                                aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        {% if player.active %}
                            <div class="mb-3">
                                <label for="bidValue" class="form-label">Value</label>
                                <input type="number" class="form-control"
                                       :class="bidErrData.value !== '' ? 'is-invalid' : ''"
                                       id="bidValue" x-model.number="bidFormData.value">
                                <div class="invalid-feedback" x-text="bidErrData.value"></div>
                            </div>
                            <div class="mb-3" x-show="!bidEdit">
                                <label for="teamBId" class="form-label">Team</label>
                                <select class="form-control"
                                        :class="bidErrData.teamId !== '' ? 'is-invalid' : ''"
                                        name="team" id="teamBId"
                                        x-model="bidFormData.teamId">
                                    <option> Select a team</option>
                                    <template x-for="team in teams">

                                        <option :value="team.id" x-text="team.name"></option>

                                    </template>
                                </select>
                                <div class="invalid-feedback" x-text="bidErrData.teamId"></div>
                            </div>
                        {% else %}
                            <div class="mb-3">
                                <label for="hireValue" class="form-label">Value</label>
                                <input type="number" class="form-control"
                                       id="hireValue" x-model.number="hireFormData.value">
                            </div>
                            <div class="mb-3">
                                <label for="hireDate" class="form-label">Excepted end date</label>
                                <input type="date" class="form-control"
                                       id="hireDate" x-model.number="hireFormData.exceptedEndDate">
                            </div>
                            <div class="mb-3">
                                <label for="teamHire" class="form-label">Team</label>
                                <select class="form-control"
                                        :class="hireErrData.teamId !== '' ? 'is-invalid' : ''"
                                        name="team" id="teamHire"
                                        x-model="hireFormData.teamId">
                                    <option> Select a team</option>
                                    <template x-for="team in teams">

                                        <option :value="team.id" x-text="team.name"></option>

                                    </template>
                                </select>
                                <div class="invalid-feedback" x-text="hireErrData.teamId"></div>
                            </div>
                        {% endif %}
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" @click="submitModal()">Save changes</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script type="application/javascript">
        function playerShow() {
            return {
                teams: [],
                {% if player.active %}
                showBids: true,
                showHistory: false,
                {% else %}
                showBids: false,
                showHistory: true,
                {% endif %}
                bidEdit: false,
                teamsUri: '{{ path('api_team_light_list') }}',
                bidFormData: {
                    name: '{{ player.name }}',
                    playerTeamId: '{{ player.actualActiveStatus ? player.actualActiveStatus.id:"" }}',
                    value: 0,
                    teamId: null,
                },
                bidErrData: {
                    value: '',
                    teamId: '',
                },
                hireFormData: {
                    name: '',
                    playerId: null,
                    value: 0,
                    teamId: null,
                    exceptedEndDate: '',
                },
                hireErrData: {
                    teamId: '',
                },

                {% if player.active %}
                async retrieveTeam() {
                    const id = {{ player.actualActiveStatus.team.id }}
                        await fetch(this.teamsUri)
                            .then((response) => response.json())
                            .then((response) => {
                                this.teams = response.filter(elt => elt.id !== id);
                            });
                },
                bidPlayer() {
                    this.bidFormData.value = {{ player.actualActiveStatus.sellingValue ?? player.actualActiveStatus.amountValue }};
                    this.bidFormData.teamId = null;
                    this.bidEdit = false;
                    this.openModal();
                },
                {% else %}
                async retrieveTeam() {
                    this.teams = await (await fetch(this.teamsUri)).json();
                },
                {% endif %}

                init() {
                    this.retrieveTeam();
                },

                openModal() {
                    const buttonModal = document.querySelector('[x-ref="showModal"]');
                    buttonModal.click();
                },

                updateBid(id) {
                    let bid = this.bids.find(elt => elt.id === id);
                    this.bidFormData.teamId = bid.team.id;
                    this.bidFormData.value = bid.value;
                    this.bidEdit = true;
                    this.openModal();
                },

                hirePlayer() {
                    this.hireFormData.playerId = {{ player.id }};
                    this.hireFormData.name = '{{ player.name }}';
                    const buttonModal = document.querySelector('[x-ref="showModal"]');
                    buttonModal.click();
                },

                submitModal() {
                    {% if player.active %}
                    this.saveBid()
                    {% else %}
                    this.hireNewPlayer()
                    {% endif %}
                },

                async saveBid() {
                    let uri = '{{ path('api_bids_save') }}';
                    await fetch(uri, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                            Accept: "application/json",
                        },
                        body: JSON.stringify(this.bidFormData),
                    }).then((response) => {
                        if (!response.ok) {
                            let err = new Error("HTTP status code: " + response.status)
                            err.response = response.json();
                            err.status = response.status
                            throw err
                        }

                        return response.json();
                    }).then(() => {
                        window.location.href = '{{ path('app_player_show', {'id' : player.id}) }}';
                    }).catch((err) => {
                        console.log(err);
                    });
                },

                async hireNewPlayer() {
                    this.hireFormData.exceptedEndDate = this.hireFormData.exceptedEndDate === '' ?
                        null : this.hireFormData.exceptedEndDate;
                    console.log(this.hireFormData);
                    let uri = '{{ path('api_players_list') }}' + this.hireFormData.playerId;
                    await fetch(uri, {
                        method: "PATCH",
                        headers: {
                            "Content-Type": "application/json",
                            Accept: "application/json",
                        },
                        body: JSON.stringify(this.hireFormData),
                    }).then((response) => {
                        if (!response.ok) {
                            let err = new Error("HTTP status code: " + response.status)
                            err.response = response.json();
                            err.status = response.status
                            throw err
                        }

                        return response.json();
                    }).then(() => {
                        window.location.href = '{{ path('app_player_show', {'id' : player.id}) }}';
                    }).catch((err) => {
                        err.response.then((data) => {
                            this.hireErrData = data;
                        });
                    });
                },
            }
        }
    </script>
{% endblock %}
