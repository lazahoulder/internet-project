{% extends 'base.html.twig' %}

{% block body %}
<div class="conainer" x-data="team()">
    <div class="row">
        <div class="col-sm-3">Name: {{ team.name }}</div>
        <div class="col-sm-3">Country: {{ team.country }}</span></div>
        <div class="col-sm-3">Active players: <span x-text="countActivePlayers"></span></div>
    </div>
    <div class="row">
        <table class="table" >
            <thead>
            <tr>
                <th scope="col">Name</th>
                <th scope="col">Surname</th>
                <th scope="col">Value</th>
                <th scope="col">Active bids</th>
                <th scope="col">Action</th>
            </tr>
            </thead>
            <tbody>
            <template x-for="player in players">
                <tr>
                    <td x-text="player.player.name"></td>
                    <td x-text="player.player.surname"></td>
                    <td x-text="player.amountValue"></td>
                    <td x-text="player.countActiveBid"></td>
                    <td class="text-right">
                    </td>
                </tr>
            </template>
            <template x-if="players.length === 0">
                <tr>
                    <td colspan="4">
                        <div class="alert alert-info">
                            There is no players in this team please add new :)
                        </div>
                    </td>
                </tr>
            </template>
            </tbody>

        </table>
    </div>
</div>
    <script type="application/javascript">
        function team() {
            return {
                teamId: {{ team.id }},
                players: [],
                name: '{{ team.name }}',
                country: '{{ team.country }}',
                countActivePlayers: '{{ team.countActivePlayers }}',
                uri: '{{ path('api_team_read', {"id" : team.id}) }}',

                async retrievePlayers(uri = this.uri) {
                    let response = await (await fetch(uri)).json();
                    this.players = response.activePlayers;
                    this.countActivePlayers = response.countActivePlayers;
                },

                init() {
                    this.retrievePlayers();
                },
            }
        }
    </script>
{% endblock %}

{% block title %}

{% endblock %}

